=haml :game_info
- if session[:error]
  .alert.alert-danger{ role: 'alert' }= session[:error]
  - session.delete(:error)
- if @current_user
  - if @game.open?
    %form{method: "post"}
      - if @pickset
        - @picks = @pickset.performance_ids.map(&:to_s)
        - total = @pickset.total
        - perfs = @pickset.performances.sort_by(&:price).reverse + @game.performances.order_by(price: :desc).nin(_id: @pickset.performance_ids)
        %table.table.table-condensed
          %tr{class: ('danger' if @pickset.cost > 50)}
            %td Cost:
            %td= @pickset.cost
          %tr
            %td Tiebreaker
            %td= @pickset.total
          %tr
            %td Last updated
            %td= @pickset.updated_at
        %input.btn.btn-warning{ type: 'submit', value: 'Update Picks' }
      - else
        - @pickset ||= Pickset.new
        - @picks = []
        - total = 0
        - perfs = @game.performances.order_by(price: :desc)
        %input.btn.btn-success{ type: 'submit', value: 'Make Picks' }
      %input{ type: 'number', name: 'total', value: total } Total points
      %br
      / - puts @mobile
      %table.table#player-selector{class: (@mobile ? 'mobile' : 'table-condensed')}
        %thead
          %th Number
          %th Last Name
          %th First Name
          %th Price
          %th Select
        %tbody
          - perfs.each do |perf|
            / - puts perf._id.to_s
            %tr{class: ('info' if @picks.include?(perf._id.to_s))}
              - p = perf.player
              %td= p.number
              %td= p.last
              %td= p.first
              %td= perf.price
              %td
                %input{type: :checkbox, name: 'picks[]', value: perf._id, checked: @picks.include?(perf._id.to_s)}
          %br
          %br
  - elsif @game.status_code.between?(5,7)
    %table.table.table-condensed
      %tr
        %td Cost:
        %td= @pickset.cost
      %tr
        %td Tiebreaker
        %td= @pickset.total
      %tr
        %td Last updated
        %td= @pickset.updated_at
    %p Game is locked. You selected the following players:
    %table.table.table-condensed.table-striped
      %thead
        %th Number
        %th Last Name
        %th First Name
        %th Price
      %tbody
        - @pickset.performances.each do |perf|
          / - puts perf._id.to_s
          %tr
            - p = perf.player
            %td= p.number
            %td= p.last
            %td= p.first
            %td= perf.price
  - elsif @game.status_code == 8
    %h3 Results
    %h4 Rankings
    %table.table.table-bordered.table-striped.table-condensed
      %thead
        %th Rank
        %th Poster
        %th Points
        %th Tiebreaker
        %th Cost
      %tbody
        - @game.rankings.each do |pick|
          %tr{class: ('info' if pick == @pickset)}
            %td= pick.rank
            %td= pick.season.user.name
            %td= pick.points
            %td= pick.difference
            %td= pick.cost
    %h3 Players
    %table.table.table-condensed.table-striped
      %thead
        %th Number
        %th Last Name
        %th First Name
        %th Points
      %tbody
        - perfs = @game.performances.gt(points: 0).order_by(points: :desc)
        - perfs.each do |perf|
          %tr{class: ('info' if @pickset.performance_ids.include?(perf._id.to_s))}
            - p = perf.player
            %td= p.number
            %td= p.last
            %td= p.first
            %td= perf.points

